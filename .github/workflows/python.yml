name: Python check

on: [push, pull_request]

defaults:
  run:
    working-directory: ./app_python

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          app_python:
            - 'app_python/**'

  check:
    timeout-minutes: 10
    needs: changes
    if: ${{ needs.changes.outputs.app_python == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            app_python:
              - 'app_python/**'

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('app.py') }}-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask
          pip install pytz

      - name: Install requirements
        run: |
          pip install -r requirements.txt --no-cache-dir 

      - name: Lint with pylint
        run: |
          pip install pylint
          pylint $(git ls-files '*.py')
      
      - name: Test with unittest
        run: |
          python -m unittest discover ./


  container:
    timeout-minutes: 10
    needs: changes
    if: ${{ needs.changes.outputs.app_python == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            app_python:
              - 'app_python/**'

      - name: Checkout 
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push Python App
        uses: docker/build-push-action@v2
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask:latest

  snyk:
    timeout-minutes: 10
    needs: changes
    if: ${{ needs.changes.outputs.app_python == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            app_python:
              - 'app_python/**'

      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master

      - name: Check vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          pip install -r requirements.txt
          snyk test --sarif-file-output=result.sarif
      - name: Upload to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: app_python/result.sarif
          
          